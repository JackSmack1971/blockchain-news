# BlockchainNews Codex Environment Requirements
# This file configures the Codex environment for optimal development on the BlockchainNews platform
# Security-Enhanced React & TypeScript Implementation with Web3 Integration

# =============================================================================
# RUNTIME REQUIREMENTS
# =============================================================================

# Node.js Runtime (Required for all operations)
node>=18.0.0,<21.0.0  # LTS version for stability with React 18 and modern tooling

# Package Managers
pnpm>=8.0.0           # Primary package manager (preferred for performance)
npm>=9.0.0            # Fallback package manager
yarn>=3.0.0           # Alternative package manager

# Python (Required for native module compilation)
python>=3.8.0,<4.0.0  # For bcrypt, node-gyp, and other native dependencies

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================

# TypeScript & Build Tools
typescript>=5.6.0     # TypeScript compiler (project uses 5.6.2)
@vitejs/plugin-react>=4.3.0  # Vite React plugin
vite>=6.0.0           # Build tool and dev server

# Code Quality & Linting
eslint>=9.15.0        # JavaScript/TypeScript linting
@typescript-eslint/parser>=8.15.0  # TypeScript parser for ESLint
@typescript-eslint/eslint-plugin>=8.15.0  # TypeScript rules
eslint-plugin-react-hooks>=5.0.0  # React Hooks rules
eslint-plugin-react-refresh>=0.4.0  # React Fast Refresh

# Testing Framework
vitest>=3.2.0         # Test runner (Vite-native testing)
@testing-library/react>=16.3.0  # React testing utilities
@testing-library/jest-dom>=6.6.0  # Jest DOM matchers
jsdom>=26.1.0         # DOM environment for testing
supertest>=6.3.0      # HTTP integration testing

# =============================================================================
# FRONTEND DEPENDENCIES
# =============================================================================

# React Ecosystem
react>=18.3.0         # Core React library
react-dom>=18.3.0     # React DOM renderer
react-router-dom>=6.0.0  # Client-side routing
react-hook-form>=7.54.0  # Form handling

# UI Component Library (shadcn/ui dependencies)
@radix-ui/react-accordion>=1.2.0
@radix-ui/react-alert-dialog>=1.1.0
@radix-ui/react-avatar>=1.1.0
@radix-ui/react-checkbox>=1.1.0
@radix-ui/react-dialog>=1.1.0
@radix-ui/react-dropdown-menu>=2.1.0
@radix-ui/react-label>=2.1.0
@radix-ui/react-popover>=1.1.0
@radix-ui/react-select>=2.1.0
@radix-ui/react-switch>=1.1.0
@radix-ui/react-tabs>=1.1.0
@radix-ui/react-toast>=1.2.0
@radix-ui/react-tooltip>=1.1.0

# Styling & Animation
tailwindcss>=3.4.0    # Utility-first CSS framework
tailwindcss-animate>=1.0.7  # Tailwind CSS animations
autoprefixer>=10.4.0  # CSS vendor prefixing
postcss>=8.4.0        # CSS processing tool
class-variance-authority>=0.7.0  # Conditional class names
clsx>=2.1.0           # Class name utility
tailwind-merge>=2.6.0 # Tailwind class merging

# Data Visualization
recharts>=2.12.0      # Chart library for market data visualization

# Utilities & Icons
lucide-react>=0.364.0 # Icon library
date-fns>=3.0.0       # Date manipulation
embla-carousel-react>=8.5.0  # Carousel component
react-resizable-panels>=2.1.0  # Resizable panels
sonner>=1.7.0         # Toast notifications
next-themes>=0.4.0    # Theme switching
cmdk>=1.0.0           # Command palette
input-otp>=1.4.0      # OTP input component
react-day-picker>=8.10.0  # Date picker
vaul>=1.1.0           # Drawer component

# =============================================================================
# BACKEND DEPENDENCIES
# =============================================================================

# Server Framework
express>=4.19.0       # Web application framework
cors>=2.8.0           # CORS middleware
express-session>=1.17.0  # Session management
express-rate-limit>=6.7.0  # Rate limiting

# Security
bcryptjs>=2.4.0       # Password hashing
csurf>=1.11.0         # CSRF protection
dompurify>=3.2.0      # XSS prevention
helmet>=7.0.0         # Security headers (recommended addition)

# Database
pg>=8.16.0            # PostgreSQL client
@types/pg>=8.10.0     # PostgreSQL type definitions

# Environment & Configuration
dotenv>=16.5.0        # Environment variable loading
zod>=3.24.0           # Schema validation

# =============================================================================
# WEB3 & BLOCKCHAIN
# =============================================================================

# Ethereum Integration
ethers>=6.8.0         # Ethereum JavaScript library
@metamask/sdk>=0.20.0 # MetaMask SDK (recommended addition)

# =============================================================================
# TYPE DEFINITIONS
# =============================================================================

# Core Type Definitions
@types/node>=22.10.0
@types/react>=18.3.0
@types/react-dom>=18.3.0
@types/react-router-dom>=5.0.0
@types/express>=5.0.0
@types/express-session>=1.18.0
@types/bcryptjs>=2.4.0
@types/csurf>=1.11.0
@types/cors>=2.8.0
@types/supertest>=6.0.0

# =============================================================================
# OPTIONAL DEVELOPMENT ENHANCEMENTS
# =============================================================================

# Git Hooks & Code Formatting
husky>=8.0.0          # Git hooks
lint-staged>=15.0.0   # Run linters on staged files
prettier>=3.0.0       # Code formatting

# Bundle Analysis
@bundle-analyzer/vite-plugin>=0.7.0  # Bundle size analysis

# Performance Monitoring
@vitejs/plugin-legacy>=5.0.0  # Legacy browser support
vite-plugin-pwa>=0.16.0  # Progressive Web App features

# Additional Security Tools
@eslint/security>=1.0.0  # Security-focused ESLint rules
audit-ci>=6.0.0        # Security audit in CI

# Documentation
typedoc>=0.25.0       # TypeScript documentation generator

# =============================================================================
# ENVIRONMENT VARIABLES (Required for Codex Setup)
# =============================================================================

# Production Environment Variables (to be set in Codex environment):
# NODE_ENV=development
# SESSION_SECRET=codex-development-secret-key-at-least-32-characters-long
# DATABASE_URL=postgresql://codex:password@localhost:5432/blockchain_news_dev
# RATE_LIMIT_WINDOW=900000
# RATE_LIMIT_MAX=100
# LOG_LEVEL=info
# FRONTEND_URL=http://localhost:3000
# PORT=3001

# =============================================================================
# SYSTEM REQUIREMENTS
# =============================================================================

# Minimum System Specifications for Codex Environment:
# - RAM: 4GB minimum, 8GB recommended
# - CPU: 2 cores minimum, 4 cores recommended
# - Storage: 2GB free space for dependencies
# - Network: Required for package installation and Web3 connectivity

# =============================================================================
# CODEX-SPECIFIC CONFIGURATIONS
# =============================================================================

# Database Setup Commands (for Codex environment initialization):
# createdb blockchain_news_dev
# psql blockchain_news_dev < server/schema.sql

# Project Installation Commands:
# pnpm install
# pnpm run build

# Development Server Commands:
# pnpm run dev (Frontend - Port 3000)
# pnpm run server:dev (Backend - Port 3001)

# Testing Commands:
# pnpm test (Unit tests)
# pnpm run test:security (Security tests)
# pnpm run lint (Code linting)

# =============================================================================
# SECURITY CONSIDERATIONS
# =============================================================================

# CRITICAL: Ensure these security packages are installed:
# - All @types/* packages for TypeScript safety
# - dompurify for XSS prevention
# - bcryptjs for secure password hashing
# - express-rate-limit for DoS protection
# - csurf for CSRF protection
# - helmet for security headers (recommended)

# Web3 Security:
# - ethers.js for secure blockchain interactions
# - Proper wallet signature validation
# - Nonce-based authentication patterns

# =============================================================================
# PERFORMANCE OPTIMIZATIONS
# =============================================================================

# Build Performance:
# - Vite for fast HMR and building
# - TypeScript with incremental compilation
# - ESBuild for fast transpilation

# Runtime Performance:
# - React 18 concurrent features
# - Code splitting with React.lazy
# - Memoization with useMemo/useCallback
# - Efficient state management with Context API

# =============================================================================
# CODEX USAGE RECOMMENDATIONS
# =============================================================================

# Preferred Task Patterns for BlockchainNews:
# 1. Security-first: Always prioritize security implementations
# 2. TypeScript-strict: Use strict typing throughout
# 3. Component isolation: Build reusable, testable components
# 4. Performance monitoring: Include performance metrics
# 5. Web3 integration: Follow Web3 security best practices

# Codex Command Examples:
# "Implement secure Web3 authentication with MetaMask integration"
# "Create a performance-optimized crypto price chart component"
# "Add comprehensive security tests for authentication endpoints"
# "Optimize the real-time data streaming performance"
# "Implement CSRF protection for all API endpoints"
